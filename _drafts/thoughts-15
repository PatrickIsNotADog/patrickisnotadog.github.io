What can differentiate me from other developers is not only the importance i give to human contact, sharing of knowledge and willing to meet other people/cultures,

but also the desire to help my close people with informatics.

The desire to help them do something they want, using computer science and programming may enspire me to start something on my own. Perhaps as a side project first, but later why not something bigger?

Where do i want to go? -> Help my own people.
And what do i do now? -> Gaining knowledge, becoming better at what i do, and also meet people, keep healthy relationships, care about their problems.



any nou resolutions about work:

I can see two different routes that a young engineer can follow to develop his skills. The first one has to do with acquiring various trending skills, which could be different languages, frameworks etc. This can be impressive in a cv, but I do not think that you can learn a variety of languages in few years (of your starting career) and also master them in a satisfactory degree. The other one is to focus on the more general aspect of problem solving and mastering a set of techniques and good practices. In the end, even if technologies change from time to time, people still remain the same, they make the same mistakes, and take the same decisions. I will  follow this road in this year and will try to be better in my work but not in a way that I can learn a new language, but instead master Java and start reading some books that will help me better and deeply understand it and also get a general way of thinking that is independent of language implementations.

"Genaral" training can be achived by reading books of great interest like effective java, code complete 2, desing patterns, enterprise integration patterns, pragmatic programmer etc. Godel escher bach is a more general book but I am looking forward to getting it!

Keep the enthousiasm: the training will be better if I keep it fun, so I should make sure that I always find interest in what I am looking at.

Mastering Java surely involves learning frameworks like Spring, libraries and endeaving into the more "hardcore" chapters of the language as the class loaders, the memory management in JVM etc. Also, I should make sure that the things I study are commercially useful, e.g. they involve servers, services, connections with databases etc. I can do this with demo projects in GitHub and also by posting in my blog, so that I also continue evolving my writing.
